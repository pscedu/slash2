.\" $Id$
.\" %PSCGPL_START_COPYRIGHT%
.\" -----------------------------------------------------------------------------
.\" Copyright (c) 2009-2015, Pittsburgh Supercomputing Center (PSC).
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or (at
.\" your option) any later version.
.\"
.\" This program is distributed WITHOUT ANY WARRANTY; without even the
.\" implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
.\" PURPOSE.  See the GNU General Public License contained in the file
.\" `COPYING-GPL' at the top of this distribution or at
.\" https://www.gnu.org/licenses/gpl-2.0.html for more details.
.\"
.\" Pittsburgh Supercomputing Center	phone: 412.268.4960  fax: 412.268.5832
.\" 300 S. Craig Street			e-mail: remarks@psc.edu
.\" Pittsburgh, PA 15213			web: http://www.psc.edu/
.\" -----------------------------------------------------------------------------
.\" %PSC_END_COPYRIGHT%
.Dd March 7, 2015
.Dt SLADM 7
.ds volume PSC \- SLASH2 Administrator's Manual
.Os http://www.psc.edu/
.Sh NAME
.Nm sladm
.Nd
.Tn SLASH2
administration guide
.Sh DESCRIPTION
.Tn SLASH2
is a distributed network file system featuring:
.Pp
.Bl -bullet -compact -offset indent
.It
support for data multi residency at the file chunk level
.It
system managed data transfer
.It
inline checksum verification
.El
.Pp
This document describes the steps involving in creating and deploying a
.Tn SLASH2
file system.
.Ss Creating a File System for SLASH2 Metadata
.Tn SLASH2
uses
.Tn ZFS
for its backend metadata file system.
To create a new
.Tn ZFS
file system, launch the
.Xr zfs-fuse 8
daemon:
.Bd -literal -offset indent
# zfs-fuse
.Pp
.Ed
Next, create a
.Tn ZFS
pool with
.Xr zpool 8
for the backing file system used by the
.Tn SLASH2
metadata server.
For example:
.Bd -literal -offset indent
# zpool create mypool sda		# single drive
# zpool create mypool mirror sda sdb	# two mirrored drives

Other pool settings:
# zfs set atime=off mypool
# zfs set compression=lz4 mypool
# zpool set cachefile=/mypool.zcf mypool
.Ed
.Pp
Before this file system can be used by the
.Tn SLASH2
metadata server, it must be initialized by
.Xr slmkfs 8 :
.Bd -literal -offset indent
# slmkfs -I $site_id:$res_id /mypool
.Ed
.Pp
The
.Va $site_id
must match the site's ID and
.Va $res_id
must match the resource's ID as specified in
.Xr slcfg 5 .
.Pp
During formatting of a new MDS file system, a file system unique ID will
be generated
.Pq Dq fsuuid .
The value for this setting in
.Xr slcfg 5
must match the ID the file system has been formatted with.
.Pp
Now that the metadata file system has been set up,
.Xr zfs-fuse 8
must be terminated before the
.Tn SLASH2
metadata server can access it:
.Bd -literal -offset indent
# umount /mypool
# pkill zfs-fuse
.Ed
.Ss Metadata Server Po Ss MDS Pc
The metadata server
.Xr slashd 8
maintains a journal file for resuming interrupted operations.
This can be created with the
.Xr slmkjrnl 8
utility:
.Bd -literal -offset indent
# slmkjrnl -f -b /dev/disk0 -u $fsuuid
.Ed
.Pp
Note that a battery backed NVRAM device is the ideal type of device for
this purpose.
.Pp
The MDS server also maintains an
.Tn SQLite
database for managing some workloads.
This is created automatically by
.Xr slashd 8
as necessary for operation.
.Pp
Now launch
.Xr slashd 8 :
.Bd -literal -offset indent
# slashd -p /mypool.zcf mypool
.Ed
.Pp
.Xr slmctl 8
can be used to control live operation of
.Xr slashd 8
once it is online.
.Ss Tn Ss I/O Ss Server
The
.Tn I/O
server
.Xr sliod 8
writes files resident in a
.Tn SLASH2
network to the root of the directory specified by the
.Ic fsroot
.Xr slcfg 5
option.
This directory must be initialized for use with
.Xr slmkfs 8 :
.Bd -literal -offset indent
# slmkfs -i -u $fsuuid -I $site_id:$res_id /$fsroot
.Ed
.Pp
Next, ensure that the shared
.Tn SLASH2
network daemon communication key has been installed on the machine.
The file defaults to
.Pa /var/lib/slash/authbuf.key
and will be generated automatically by
.Xr slashd 8
or manually with
.Xr slkeymgt 8 :
.Bd -literal -offset indent
# scp mdshost:/var/lib/slash/authbuf.key /var/lib/slash
.Ed
.Pp
Now launch
.Xr sliod 8 :
.Bd -literal -offset indent
# sliod
.Ed
.Pp
.Xr slictl 8
can be used to control live operation of the
.Tn I/O
server once it is online.
.Ss Client Mount Daemon
To communicate on a
.Tn SLASH2
network, the shared network daemon communication key must be installed
on the machine.
The file defaults to
.Pa /var/lib/slash/authbuf.key
and will be generated automatically by
.Xr slashd 8
or manually with
.Xr slkeymgt 8 :
.Bd -literal -offset indent
# scp mdshost:/var/lib/slash/authbuf.key /var/lib/slash
.Ed
.Pp
Now
.Xr mount_slash 8
may be used to mount a
.Tn SLASH2
file system under a directory node on the local system:
.Bd -literal -offset indent
# mount_slash -U /myfs
.Ed
.Pp
.Xr msctl 8
can be used to control live operation of the client mount point once it
has been brought up.
.Sh CAVEATS
Running metadata and
.Tn I/O
servers on the same machine currently requires configuring each daemon
to listen on different addresses.
Furthermore, the network configuration must be such that each daemon can
access clients via the client destination network address.
.Pp
For example, setups where
.Xr slashd 8
residing on one network on
.Li eth0
reaches a client over a different client network address than
.Xr sliod 8
residing on a different network on
.Li eth1
will not work.
.Pp
The reason for this is because alternative
.Tn TCP
ports cannot be used for each of
.Xr slashd 8
and
.Xr sliod 8 ,
as
.Tn SLASH2
utilizes the Lustre networking stack which does not easily
permit applications from connecting to multiple peers on differing
.Tn TCP
ports.
A single
.Tn TCP
port must be used globally for all daemons.
.El
.Sh SEE ALSO
.Xr odtable 1 ,
.Xr slcfg 5 ,
.Xr mount_slash 8 ,
.Xr msctl 8 ,
.Xr slashd 8 ,
.Xr slictl 8 ,
.Xr sliod 8 ,
.Xr slkeymgt 8 ,
.Xr slmctl 8 ,
.Xr slmkfs 8 ,
.Xr slmkjrnl 8 ,
.Xr zpool 8
